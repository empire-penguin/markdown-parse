# This is a basic workflow to help you get started with Actions

# CI - continuous integration
name: MarkdownParse JUnit Tests

# Controls when the workflow will run
# events that trigger it 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  
  # run on push
  push:
    branches: [ main ]
    
  # run on pull_request
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# what actually runs
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # GHA starts up a server to run our action
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest #macos-latest, windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2 # git clone 

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run our JUnit test
        run: |
          echo The directory is $GITHUB_WORKSPACE
          javac -cp lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar:. MarkdownParseTest.java
          java -cp lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar:. org.junit.runner.JUnitCore MarkdownParseTest
